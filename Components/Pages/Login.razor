@page "/login"
@using WebPortal.Data
@using WebPortal.Services
@inject NavigationManager Navigate
@inherits OwningComponentBase<StudentService>
@rendermode InteractiveServer

<PageTitle>Login Form</PageTitle>
<link rel="stylesheet" href="styles/user.css" />


<div id="left-div">
	<div id="left-img-div">
		<img src="images/side.png" alt="Side Image" id="left-img" />
	</div>

</div>

<div id="right-div">
	<div id="right-img-div">
		<img src="images/side2.jpg" alt="Background" id="right-img" />
	</div>
	<div class="wrapper">
		<EditForm Model="obj" OnValidSubmit="findUser" FormName="LoginForm">
			<h2>Login</h2>
			<div class="input-field">
				<input type="text" required @bind="obj.username"/>
				<label>Enter your username</label>
			</div>
			<div class="input-field">
				<input type="password" required @bind="obj.password"/>
				<label>Enter your password</label>
			</div>
			<div class="forget">
				<label for="remember">
					<input type="checkbox" id="remember" />
					<p>Remember me</p>
				</label>
				<a href="#">Forgot password?</a>
			</div>
			@if (found == null)
			{
				<p class="auth-error">Wrong Username/Password</p>
			}
			<button type="submit">Log In</button>
			<div class="register">
				<p>Don't have an account? <a href="/signup">Signup</a></p>
			</div>
		</EditForm>
	</div>

</div>

@code {
	IList<StudentClass> stdList;
	StudentClass obj = new StudentClass();

	protected override void OnInitialized()
	{
		int id = Service.getLoggedUser();

		if(id != 0)
		{
			Navigate.NavigateTo("/details");
		}
		else
		{
			stdList = Service.getAllStudentDetails();
		}
	}

	StudentClass? found = new StudentClass();

	void findUser()
	{
		found = Service.findUser(obj.username, obj.password);

		if(found != null) {
			Service.toggleLoggedStatus(found);
			Navigate.NavigateTo("/details");
		}
		else
		{
			obj = new StudentClass();
		}
	}

}
